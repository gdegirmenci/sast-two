AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template with intentional security issues for Checkov detection

Resources:
  # Issue 1: S3 Bucket without encryption
  InsecureS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-insecure-cloudformation-bucket
      # Missing BucketEncryption
      # Missing VersioningConfiguration
      # Missing LoggingConfiguration
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # Issue 2: RDS Instance without encryption
  InsecureDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: my-insecure-db
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      Engine: mysql
      MasterUsername: admin
      MasterUserPassword: Password123  # Issue 3: Hardcoded password
      StorageEncrypted: false  # No encryption
      BackupRetentionPeriod: 0  # No backups
      PubliclyAccessible: true  # Publicly accessible
      MultiAZ: false  # No high availability

  # Issue 4: Security Group with unrestricted access
  WideOpenSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group with unrestricted access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0  # Open to world
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # SSH open to world
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0  # RDP open to world

  # Issue 5: IAM Policy with wildcard permissions
  OverlyPermissivePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AdminPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'  # All actions
            Resource: '*'  # All resources
      Roles:
        - !Ref OverlyPermissiveRole

  OverlyPermissiveRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'

  # Issue 6: EBS Volume without encryption
  UnencryptedVolume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: us-east-1a
      Size: 100
      Encrypted: false  # Not encrypted

  # Issue 7: CloudTrail without log validation
  InsecureCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref InsecureS3Bucket
      IsLogging: true
      EnableLogFileValidation: false  # No log validation
      # Missing KMS encryption
      # Missing CloudWatch Logs integration

  # Issue 8: ELB without access logs
  InsecureLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: insecure-alb
      Scheme: internet-facing
      Type: application
      # Missing access logs configuration
      IpAddressType: ipv4

  # Issue 9: Lambda function with overly permissive role
  InsecureLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: insecure-lambda
      Runtime: python3.9
      Handler: index.handler
      Code:
        ZipFile: |
          def handler(event, context):
              return {'statusCode': 200}
      Role: !GetAtt OverlyPermissiveRole.Arn
      # Missing VPC configuration
      # Missing KMS encryption for environment variables
      Environment:
        Variables:
          API_KEY: hardcoded-api-key-12345  # Hardcoded secret

  # Issue 10: ElastiCache without encryption
  InsecureElastiCache:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: insecure-redis
      ReplicationGroupDescription: Redis without encryption
      Engine: redis
      CacheNodeType: cache.t2.micro
      NumCacheClusters: 1
      AtRestEncryptionEnabled: false  # No encryption at rest
      TransitEncryptionEnabled: false  # No encryption in transit

  # Issue 11: Kinesis Stream without encryption
  InsecureKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: insecure-stream
      ShardCount: 1
      # Missing StreamEncryption

  # Issue 12: SNS Topic without encryption
  InsecureSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: insecure-topic
      # Missing KmsMasterKeyId

  # Issue 13: SQS Queue without encryption
  InsecureSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: insecure-queue
      # Missing KmsMasterKeyId

  # Issue 14: DynamoDB Table without encryption
  InsecureDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: insecure-table
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      # Missing SSESpecification

  # Issue 15: API Gateway without logging
  InsecureApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: insecure-api
      # Missing access logging configuration

  # Issue 16: ECR Repository without image scanning
  InsecureECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: insecure-repo
      ImageScanningConfiguration:
        ScanOnPush: false  # No image scanning
      # Missing encryption configuration

Outputs:
  BucketName:
    Value: !Ref InsecureS3Bucket
    Description: Name of the insecure S3 bucket
