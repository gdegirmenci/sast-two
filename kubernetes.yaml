# Kubernetes manifest with intentional security issues for Checkov detection

apiVersion: v1
kind: Pod
metadata:
  name: insecure-pod
  labels:
    app: insecure-app
spec:
  # Issue 1: No security context defined at pod level
  containers:
  - name: app-container
    image: nginx:latest  # Issue 2: Using latest tag
    
    # Issue 3: Running as root (no securityContext with runAsNonRoot)
    # Issue 4: Privileged container
    securityContext:
      privileged: true
      allowPrivilegeEscalation: true
      runAsUser: 0
    
    # Issue 5: No resource limits defined
    # (Missing resources.limits)
    
    # Issue 6: Exposed ports
    ports:
    - containerPort: 80
    
    # Issue 7: Hardcoded secrets in environment variables
    env:
    - name: DATABASE_PASSWORD
      value: "hardcoded-password-123"
    - name: API_TOKEN
      value: "secret-token-xyz"
    
    # Issue 8: No readiness/liveness probes
    # (Missing livenessProbe and readinessProbe)

---

apiVersion: v1
kind: Service
metadata:
  name: insecure-service
spec:
  type: LoadBalancer  # Issue 9: Exposing service publicly
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: insecure-app

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: insecure-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vulnerable-app
  template:
    metadata:
      labels:
        app: vulnerable-app
    spec:
      # Issue 10: hostNetwork enabled
      hostNetwork: true
      
      # Issue 11: hostPID enabled
      hostPID: true
      
      # Issue 12: hostIPC enabled
      hostIPC: true
      
      containers:
      - name: vulnerable-container
        image: ubuntu:latest
        
        # Issue 13: Container with write access to root filesystem
        securityContext:
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - SYS_ADMIN  # Issue 14: Dangerous capability added
            - NET_ADMIN
        
        # Issue 15: No resource limits
        resources: {}
        
        # Issue 16: Mounting sensitive host paths
        volumeMounts:
        - name: host-root
          mountPath: /host
      
      volumes:
      - name: host-root
        hostPath:
          path: /  # Issue 17: Mounting host root directory

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: insecure-sa
# Issue 18: No automountServiceAccountToken: false

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: overly-permissive-role
rules:
# Issue 19: Wildcard permissions
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: insecure-config
data:
  # Issue 20: Secrets in ConfigMap
  database-password: "MyDatabasePassword"
  api-key: "1234567890abcdef"
